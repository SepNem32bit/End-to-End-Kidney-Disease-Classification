#This can help to check all pipeline stages and ignore those which have already done

stages:
  data_ingestion:
    cmd: python src/DiseaseClassifier/pipeline/stage01_data_ingestion.py
    #dependencies: Dependencies in a pipeline configuration are specifically for files or artifacts that, if modified, would meaningfully change the output of that stage
    #Since the ConfigurationManager, DataIngestion, and logger modules are used by stage01_data_ingestion.py, the pipeline tracks changes through the stage script itself. 
    #Thus, listing src/DiseaseClassifier/pipeline/stage01_data_ingestion.py as a dependency covers these imports indirectly.
    deps:
      - src/DiseaseClassifier/pipeline/stage01_data_ingestion.py
      - config/config.yaml
    #outputs
    outs:
      - artifacts/data_ingestion/kidney-ct-scan-image-samples

  prepare_base_model:
    cmd: python src/DiseaseClassifier/pipeline/stage02_prepare_base_model.py
    deps:
      - src/DiseaseClassifier/pipeline/stage02_prepare_base_model.py
      - config/config.yaml
    params:
      - IMAGE_SIZE
      - INCLUDE_TOP
      - CLASSES
      - WEIGHTS
      - LEARNING_RATE
    outs:
      - artifacts/prepare_base_ML

  training:
    cmd: python src/DiseaseClassifier/pipeline/stage03_training.py
    deps:
      - src/DiseaseClassifier/pipeline/stage03_training.py
      - config/config.yaml
      - artifacts/data_ingestion/kidney-ct-scan-image-samples
      - artifacts/prepare_base_model
    params:
      - IMAGE_SIZE
      - EPOCHS
      - BATCH_SIZE
      - AUGMENTATION
    outs:
      - artifacts/training_ML/model.h5


  evaluation:
    cmd: python src/DiseaseClassifier/pipeline/stage04_mlflow_evaluation.py
    deps:
      - src/DiseaseClassifier/pipeline/stage04_mlflow_evaluation.py
      - config/config.yaml
      - artifacts/data_ingestion/kidney-ct-scan-image-samples
      - artifacts/training_ML/model.h5
    params:
      - IMAGE_SIZE
      - BATCH_SIZE
    metrics:
    - scores.json:
        cache: false